{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common/http\";\nexport class ProductService {\n  constructor(http) {\n    this.http = http;\n    // The constructor is a special method that gets executed when an instance of this service is created.\n    // Here, we inject the HttpClient into the ProductService using dependency injection.\n    // This allows us to use the HttpClient to make HTTP requests to the server.\n  }\n  // The getAll() method is used to fetch all products from the server.\n  // It returns an Observable that emits the response data when the HTTP request is successful.\n  // The '<any>' type is used to indicate that we're expecting any type of data to be returned.\n  // In real-world scenarios, you might want to define a proper data model instead of using 'any'.\n  getAll() {\n    // We use the 'http' property (injected HttpClient) to make a GET request to the specified URL.\n    // In this case, we're fetching all products, so the URL is 'http://localhost:9090/Product/all'.\n    // The 'get()' method returns an Observable that represents the HTTP response.\n    // The actual HTTP request is not sent until you subscribe to this Observable.\n    return this.http.get('http://localhost:9090/Product/all');\n  }\n}\nProductService.ɵfac = function ProductService_Factory(t) {\n  return new (t || ProductService)(i0.ɵɵinject(i1.HttpClient));\n};\nProductService.ɵprov = /*@__PURE__*/i0.ɵɵdefineInjectable({\n  token: ProductService,\n  factory: ProductService.ɵfac,\n  providedIn: 'root'\n});","map":{"version":3,"names":["ProductService","constructor","http","getAll","get","i0","ɵɵinject","i1","HttpClient","factory","ɵfac","providedIn"],"sources":["/Users/shankaranandjha/Work/AngularJavaProgram/ProductApp/src/app/product-show-all/Services/product.service.ts"],"sourcesContent":["// Import the Injectable decorator from the Angular core\nimport { Injectable } from '@angular/core';\n\n// Import the HttpClient module to make HTTP requests\nimport { HttpClient } from '@angular/common/http';\n\n// Import the Observable class from the rxjs library to handle asynchronous data streams\nimport { Observable } from 'rxjs';\n\n@Injectable({\n  // The providedIn property specifies that this service should be available at the root level,\n  // meaning it will be a singleton service accessible throughout the application.\n  providedIn: 'root',\n})\nexport class ProductService {\n  constructor(private http: HttpClient) {\n    // The constructor is a special method that gets executed when an instance of this service is created.\n    // Here, we inject the HttpClient into the ProductService using dependency injection.\n    // This allows us to use the HttpClient to make HTTP requests to the server.\n  }\n\n  // The getAll() method is used to fetch all products from the server.\n  // It returns an Observable that emits the response data when the HTTP request is successful.\n  // The '<any>' type is used to indicate that we're expecting any type of data to be returned.\n  // In real-world scenarios, you might want to define a proper data model instead of using 'any'.\n  getAll(): Observable<any> {\n    // We use the 'http' property (injected HttpClient) to make a GET request to the specified URL.\n    // In this case, we're fetching all products, so the URL is 'http://localhost:9090/Product/all'.\n    // The 'get()' method returns an Observable that represents the HTTP response.\n    // The actual HTTP request is not sent until you subscribe to this Observable.\n    return this.http.get('http://localhost:9090/Product/all');\n  }\n}\n"],"mappings":";;AAcA,OAAM,MAAOA,cAAc;EACzBC,YAAoBC,IAAgB;IAAhB,KAAAA,IAAI,GAAJA,IAAI;IACtB;IACA;IACA;EACF;EAEA;EACA;EACA;EACA;EACAC,MAAMA,CAAA;IACJ;IACA;IACA;IACA;IACA,OAAO,IAAI,CAACD,IAAI,CAACE,GAAG,CAAC,mCAAmC,CAAC;EAC3D;;AAjBWJ,cAAc,C;mBAAdA,cAAc,EAAAK,EAAA,CAAAC,QAAA,CAAAC,EAAA,CAAAC,UAAA;AAAA;AAAdR,cAAc,C;SAAdA,cAAc;EAAAS,OAAA,EAAdT,cAAc,CAAAU,IAAA;EAAAC,UAAA,EAFb;AAAM"},"metadata":{},"sourceType":"module","externalDependencies":[]}